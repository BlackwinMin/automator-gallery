<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.39</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>runpy3 () {
/usr/local/bin/python3 &lt;&lt; 'EOF' - "$@"

import sys
import os
import sys
import plistlib
from subprocess import Popen, PIPE

INPUT_FILE  = os.path.join(os.environ['HOME'], 'Library/Safari/Bookmarks.plist')

if len(sys.argv[1:]) == 0:
	prompt_scpt = '''
	set the_results to (display dialog "请输入需要导出的书签文件夹" default answer "BookmarksBar")
	set the_text to text returned of the_results
	'''
	p = Popen(['osascript', '-'], stdin=PIPE, stdout=PIPE, stderr=PIPE)
	stdout, stderr = p.communicate(prompt_scpt.encode('utf-8'))
	stdout.decode('utf-8')
	bookmark_group = str(stdout).replace("b\'","").replace("\\n'","")
else:
	bookmark_group = sys.argv[1]

with open(INPUT_FILE, 'rb') as plist_file:
	plist = plistlib.load(plist_file)
	
children = plist['Children']
for child in children:
	if child.get('Title', None) == bookmark_group:
		bookmark_list = child

bookmarks = bookmark_list['Children']

urls = []
titles = []

for bookmark in bookmarks:
	if 'URLString' in bookmark.keys():
		urls.append(bookmark['URLString'])
		titles.append(bookmark['URIDictionary']['title'])

url_list_py = str(list(urls)).replace('\'','').replace('[','').replace(']','')
title_list_py = str(list(titles)).replace('\'','').replace('[','').replace(']','')

scpt = '''
	on run {title_list_py, url_list_py}
		set the date_stamp to ((the current date) as string)
		set NoteTitle to "# Safari 文章书签 " &amp; the date_stamp
		set mdlink_list to {}

		set old_delimiters to AppleScript's text item delimiters
		set AppleScript's text item delimiters to ","
		set title_list to every text item of title_list_py
		set url_list to every text item of url_list_py
		set AppleScript's text item delimiters to old_delimiters

		tell application "System Events"
			set activeApp to name of first application process whose frontmost is true
			activate
			choose from list title_list with title "请选择要导出的书签" with multiple selections allowed
			if result is not false then
				set title_choice to result
			else
				set title_choice to title_list
			end if
		end tell

		-- 根据选出来的页面，创建对应的 Markdown 格式链接
		repeat with i from 1 to the count of title_choice
			repeat with t from 1 to the count of title_list
				if item t of title_list is item i of title_choice then set the end of mdlink_list to ((i as string) &amp; ". [" &amp; (item t of title_list) &amp; "](" &amp; (item t of url_list) &amp; ")\n")
			end repeat
		end repeat

		-- 暂时把 AppleScript 默认分隔符换成回车，便于排版，排好文本内容后恢复系统分隔符
		set old_delim to AppleScript's text item delimiters
		set AppleScript's text item delimiters to return
		set mdlink_list to (NoteTitle &amp; "\n\n" &amp; mdlink_list) as text
		set AppleScript's text item delimiters to old_delim

		set the clipboard to mdlink_list
	end run'''
args = [title_list_py, url_list_py]

p = Popen(['osascript', '-'] + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)
p.communicate(scpt.encode('utf-8'))
EOF
}

runpy3 "$@"</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>E3C24DB2-5F81-4B60-991F-514226D5E6DE</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>49F1DCC9-7852-4431-9FC4-1A90781C672A</string>
				<key>UUID</key>
				<string>000FAA0F-8C83-4B7E-A1FD-DDD756C7576B</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>358.500000:252.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
